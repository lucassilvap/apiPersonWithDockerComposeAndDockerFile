version: '3.1'

services:
  api-person:
    image: my-spring-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 9090:8080
    environment:
      - SPRING_APPLICATION_NAME=apiPerson
      - SERVER_ERROR_INCLUDE_MESSAGE=always
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/teste
      - SPRING_DATASOURCE_USERNAME=lucas
      - SPRING_DATASOURCE_PASSWORD=lucas1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - db
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    depends_on:
      - db

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=lucas1234
      - MYSQL_DATABASE=teste
      - MYSQL_USER=lucas
      - MYSQL_PASSWORD=lucas1234
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:


# services:
#   mmysql:
#     image: mysql
#     container_name: mysqldb
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: teste
#       MYSQL_USER: lucas
#       MYSQL_PASSWORD: lucas1234
#     ports:
#       - "3306:3306"
#     networks:
#       - spring_mysql

#   spring-boot-app:
#     container_name: springbootapp
#     build:
#       context: .
#       dockerfile: Dockerfile
#     restart: always
#     ports:
#       - "8080:8080"
#     depends_on:
#       - mmysql
#     environment:
#       MYSQL_HOST: mysqldb
#       MYSQL_USER: lucas
#       MYSQL_PASSWORD: lucas1234
#       MYSQL_PORT: 3306
#     networks:
#       - spring_mysql
# networks:
#   spring_mysql:
#     driver: bridge